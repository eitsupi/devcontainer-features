name: "CI - Test Features"
on:
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - test/**
      - "!**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            duckdb-cli: ./**/duckdb-cli/**
            go-task: ./**/go-task/**
            jq-likes: ./**/jq-likes/**
            julia: ./**/julia/**
            just: ./**/just/**
            mdbook: ./**/mdbook/**
            nushell: ./**/nushell/**
            typst: ./**/typst/**

  test-detects:
    needs:
      - detect-changes
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
        baseImage:
          - debian:stable-slim
          - ubuntu:focal
          - ubuntu:jammy
          - mcr.microsoft.com/devcontainers/base:ubuntu
          - mcr.microsoft.com/devcontainers/base:debian
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-detectes-scenarios:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - detect-changes
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .

  test-all:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - duckdb-cli
          - go-task
          - jq-likes
          - julia
          - just
          - mdbook
          - nushell
          - typst
        baseImage:
          - debian:stable-slim
          - ubuntu:focal
          - ubuntu:jammy
          - mcr.microsoft.com/devcontainers/base:ubuntu
          - mcr.microsoft.com/devcontainers/base:debian
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-all-scenarios:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - duckdb-cli
          - go-task
          - jq-likes
          - julia
          - just
          - mdbook
          - nushell
          - typst
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
